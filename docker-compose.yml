version: "3.9"

services:
  mongo:
    image: mongo:6
    ports: ["27017:27017"]
    restart: unless-stopped

  neo4j:
    image: neo4j:5
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      - NEO4J_AUTH=neo4j/neo4jpassword
      - NEO4J_PLUGINS=[]
    restart: unless-stopped

  hardhat:
    image: node:20
    working_dir: /app
    volumes:
      - ./blockchain:/app
    command: bash -lc "npm install && npx hardhat node --hostname 0.0.0.0"
    ports: ["8545:8545"]
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -sf -H 'Content-Type: application/json' --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_blockNumber\",\"params\":[],\"id\":1}' http://localhost:8545 > /dev/null"]
      interval: 5s
      timeout: 3s
      retries: 30
      start_period: 5s

  deployer:
    image: node:20
    working_dir: /app
    volumes:
      - ./blockchain:/app
    depends_on:
      hardhat:
        condition: service_healthy
    command: bash -lc "npm install && echo 'Deploying to docker network' && npx hardhat run scripts/deploy.js --network docker && ls -R deployments && sleep 5"
    restart: "no"

  ml_service:
    build: ./services/ml_service
    ports: ["8000:8000"]
    env_file: .env
    environment:
      # Override localhost values for in-cluster networking
      MONGO_URI: mongodb://mongo:27017
      NEO4J_URI: bolt://neo4j:7687
      RPC_URL: http://hardhat:8545
      CONTRACT_JSON: /workspace/blockchain/deployments/localhost/IncidentLog.json
      MODEL_KIND: iforest
      DOCKER: "1"
    depends_on: [mongo, neo4j, hardhat, deployer]
    restart: unless-stopped
    volumes:
      - ./blockchain:/workspace/blockchain:ro

  dashboard:
    build: ./services/dashboard
    ports: ["8501:8501"]
    env_file: .env
    environment:
      MONGO_URI: mongodb://mongo:27017
      NEO4J_URI: bolt://neo4j:7687
    depends_on: [ml_service]
    restart: unless-stopped

  collector:
    build: ./services/collector
    env_file: .env
    environment:
      ML_API: http://ml_service:8000/ingest
      DOCKER: "1"
    depends_on: [ml_service]
    restart: unless-stopped
  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports: ["2181:2181"]
    restart: unless-stopped

  kafka:
    image: confluentinc/cp-kafka:7.6.1
    depends_on: [zookeeper]
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    restart: unless-stopped
